buildscript {
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/central"
        }
        jcenter {
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
    }
    dependencies {
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
    }
}

plugins {
    id "com.gradle.plugin-publish" version "0.10.0"
    id 'com.jfrog.bintray' version '1.8.4'
    id 'java-gradle-plugin'
    id 'java'

    // Required for JFrog Artifactory repository
    id 'jacoco'
    id 'maven-publish'

    // Required for Maven Nexus repository
    id 'maven'
    id 'signing'
    id 'idea'
}

version = '4.8.7'
group = 'org.web3j'
description = 'web3j Spring Boot Starter'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    web3jVersion = '4.8.7'
    springBootVersion = '2.5.4'

    nexusUsername = System.getenv('NEXUS_USERNAME')
    nexusPassword = System.getenv('NEXUS_PASSWORD')
    nexusRepoUrl = System.getenv('NEXUS_URL')
    isSnapshotVersion = project.version.endsWith("-SNAPSHOT")
}

apply plugin: 'maven'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(
                    url: "${nexusRepoUrl}/content/repositories/releases") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(
                    url: "${nexusRepoUrl}/content/repositories/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
}


configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


repositories {
    maven {
        url "https://maven.aliyun.com/repository/central"
    }
    jcenter {
        url "https://maven.aliyun.com/repository/public"
    }
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-autoconfigure:$springBootVersion",
            "org.springframework.boot:spring-boot-actuator:$springBootVersion",
            "org.springframework.boot:spring-boot-actuator-autoconfigure:$springBootVersion",
            "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion",
            "org.web3j:core:$web3jVersion"

    compile("org.springframework.boot:spring-boot-starter:$springBootVersion") {
        exclude module: 'commons-logging'
    }
    testCompile 'junit:junit:4.12',
            "org.springframework.boot:spring-boot-starter-test:$springBootVersion",
            "org.springframework.boot:spring-boot-test:$springBootVersion"
}

configurations {
    // We need to exclude these as they clash with gradle-4.10+
    testRuntimeClasspath.exclude module: 'spring-boot-starter-logging'
    testRuntimeClasspath.exclude module: "logback-classic"
    testCompileClasspath.exclude module: 'spring-boot-starter-logging'
    testCompileClasspath.exclude module: "logback-classic"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, javadocJar
}
